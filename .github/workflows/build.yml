name: Build and Release convmusic

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        architecture: [x86_64, arm64]
        exclude:
          - os: windows-latest
            architecture: arm64  # Windows ARM builds aren't well-supported

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Build with Nuitka (CI/CD)
        uses: Nuitka/Nuitka-Action@main
        with:
            nuitka-version: main
            script-name: convert
            mode: app
      - name: Upload Executable Artifact
        uses: actions/upload-artifact@v4
        with:
          name: convmusic-${{ runner.os }}-${{ matrix.architecture }}
          path: build/convmusic*
          if-no-files-found: error

  manual_build:
    runs-on: ${{ matrix.os }}
    needs: build
    if: github.event_name == 'workflow_dispatch'  # Triggered manually via 'workflow_dispatch'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Nuitka
        run: |
          python -m pip install --upgrade pip
          python -m pip install nuitka

      - name: Run Manual Build Script
        run: |
          if [ $RUNNER_OS == "Linux" ]; then
            chmod +x build.sh && ./build.sh  # Linux/Mac
          elif [ $RUNNER_OS == "Windows" ]; then
            ./build.bat  # Windows
          fi

      - name: Upload Executable Artifact (Manual)
        uses: actions/upload-artifact@v4
        with:
          name: manual-convmusic-${{ runner.os }}-${{ matrix.architecture }}
          path: build/convmusic*
          if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
