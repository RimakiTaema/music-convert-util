name: Build and Release convmusic

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        architecture: [x86_64, arm64]
        exclude:
          - os: windows-latest
            architecture: arm64  # Windows ARM builds aren't well-supported

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # Use Docker for ARM64 Linux Builds
      - name: Build for ARM64 on Linux using Docker
        if: matrix.architecture == 'arm64' && runner.os == 'Linux'
        run: |
          docker run --rm --platform linux/arm64 -v $PWD:/app -w /app ubuntu bash -c "
            apt update && apt install -y python3 python3-pip
            pip install nuitka
            nuitka --onefile convert.py
          "
          mv convert build/convmusic

      # Regular x86_64 Build (No Docker)
      - name: Build with Nuitka (CI/CD) for x86_64
        if: matrix.architecture == 'x86_64'
        uses: Nuitka/Nuitka-Action@main
        with:
            nuitka-version: main
            script-name: convert.py

      # macOS Rename, Archive, and Upload (No .app)
      - name: Rename macOS Executable
        if: runner.os == 'macOS'
        run: |
          mv build/convert build/convmusic
          tar -czvf convmusic-macos-${{ matrix.architecture }}.tar.gz -C build convmusic

      - name: Upload macOS Archive
        if: runner.os == 'macOS'
        uses: actions/upload-artifact@v4
        with:
          name: convmusic-macos-${{ matrix.architecture }}
          path: convmusic-macos-${{ matrix.architecture }}.tar.gz
          if-no-files-found: error

      # Linux Rename, Archive, and Upload
      - name: Rename Linux Executable
        if: runner.os == 'Linux'
        run: |
          mv build/convmusic build/convmusic-linux-${{ matrix.architecture }}
          tar -czvf convmusic-linux-${{ matrix.architecture }}.tar.gz -C build convmusic-linux-${{ matrix.architecture }}

      - name: Upload Linux Archive
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v4
        with:
          name: convmusic-linux-${{ matrix.architecture }}
          path: convmusic-linux-${{ matrix.architecture }}.tar.gz
          if-no-files-found: error

      # Windows Rename, Archive, and Upload
      - name: Rename Windows Executable
        if: runner.os == 'Windows'
        run: |
          mv build/convert.exe build/convmusic.exe
          tar -czvf convmusic-windows-${{ matrix.architecture }}.tar.gz -C build convmusic.exe

      - name: Upload Windows Archive
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: convmusic-windows-${{ matrix.architecture }}
          path: convmusic-windows-${{ matrix.architecture }}.tar.gz
          if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Ensure token has write access
    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v1.0.${{ github.run_number }}
          name: 1.0.${{ github.run_number }}
          files: artifacts/**/*.tar.gz  # Only upload archives
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
