name: Build and Release convmusic

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        architecture: [x86_64, arm64]
        exclude:
          - os: windows-latest
            architecture: arm64  # Windows ARM builds aren't well-supported

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Nuitka
        run: |
          python -m pip install --upgrade pip
          python -m pip install nuitka

      - name: Build on Linux/macOS
        if: runner.os != 'Windows'
        run: chmod +x build.sh && ./build.sh

      - name: Build on Windows
        if: runner.os == 'Windows'
        run: |
          # Download Dependency Walker
          Invoke-WebRequest -Uri "https://dependencywalker.com/depends22_x64.zip" -OutFile "$env:TEMP\depends22_x64.zip"
          
          # Extract Dependency Walker
          Expand-Archive -Path "$env:TEMP\depends22_x64.zip" -DestinationPath "$env:TEMP\DependencyWalker"

          # Run the build.bat script
          .\build.bat

          # Optionally run Dependency Walker (depends.exe) to analyze the dependencies of the output executable
          & "$env:TEMP\DependencyWalker\depends.exe" "$env:CI_WORKSPACE\build\convmusic.exe" 

      - name: Upload Executable Artifact
        uses: actions/upload-artifact@v4
        with:
          name: convmusic-${{ runner.os }}-${{ matrix.architecture }}
          path: build/convmusic*
          if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
